CREATE TABLE Mecze (
    id_meczu INT IDENTITY(1,1) PRIMARY KEY,
    data_meczu DATE NOT NULL,
    godzina TIME NOT NULL,
    id_gospodarza INT NOT NULL,  -- odwołanie do KLUB z Oracla (brak FK)
    id_goscia INT NOT NULL,      -- odwołanie do KLUB z Oracla
    id_stadionu INT NULL,        -- odwołanie do stadionu z Excela
    wynik NVARCHAR(20) NULL
);

-- Tabela WYDARZENIA MECZOWE
CREATE TABLE WydarzeniaMeczowe (
    id_wydarzenia INT IDENTITY(1,1) PRIMARY KEY,
    id_meczu INT NOT NULL,
    minuta INT NOT NULL,
    typ_wydarzenia NVARCHAR(50) NOT NULL,  -- np. gol, faul, kartka
    id_zawodnika INT NULL,                 -- odwołanie do Oracla (ZAWODNIK)
    dodatkowe_info NVARCHAR(255) NULL,

    FOREIGN KEY (id_meczu) REFERENCES Mecze(id_meczu)
);

CREATE TABLE Stadiony (
    id_stadionu INT IDENTITY(1,1) PRIMARY KEY,
    nazwa NVARCHAR(100) NOT NULL,
    miasto NVARCHAR(100) NOT NULL,
    pojemnosc INT,
    status BIT NOT NULL DEFAULT 1
);

ALTER TABLE Mecze
ADD CONSTRAINT fk_mecze_stadiony FOREIGN KEY (id_stadionu) REFERENCES Stadiony(id_stadionu);

EXEC sp_addlinkedserver 
    @server = 'ORACLE_LINK',
    @srvproduct = 'Oracle',
    @provider = 'OraOLEDB.Oracle',
    @datasrc = 'PD19C';
go
EXEC sp_addlinkedsrvlogin 
    @rmtsrvname = 'ORACLE_LINK', 
    @useself = 'false', 
    @locallogin = NULL, 
    @rmtuser = 'SYSTEM', 
    @rmtpassword = '12345';

go
EXEC sp_addlinkedsrvlogin 
    @rmtsrvname = 'ORACLE_LINK', 
    @useself = 'false', 
    @locallogin = NULL, 
    @rmtuser = 'APP_USER', 
    @rmtpassword = 'strongpassword';

go

CREATE PROCEDURE ZmienStatusStadionu
    @nazwa NVARCHAR(100),
    @nowy_status BIT
AS
BEGIN
    UPDATE Stadiony
    SET status = @nowy_status
    WHERE nazwa = @nazwa;
END;

CREATE PROCEDURE DodajStadion
    @nazwa NVARCHAR(100),
    @miasto NVARCHAR(100),
    @pojemnosc INT,
    @status BIT = 1
AS
BEGIN
    INSERT INTO Stadiony (nazwa, miasto, pojemnosc, status)
    VALUES (@nazwa, @miasto, @pojemnosc, @status);
END;

CREATE PROCEDURE DodajMeczPoNazwach
    @data_meczu DATE,
    @godzina TIME,
    @nazwa_gospodarza NVARCHAR(100),
    @nazwa_goscia NVARCHAR(100),
    @id_stadionu INT = NULL,
    @wynik NVARCHAR(20) = NULL
AS
BEGIN
    DECLARE @id_gospodarza INT;
    DECLARE @id_goscia INT;

    SELECT @id_gospodarza = id_klubu
    FROM OPENQUERY(ORACLE_LINK, 
        'SELECT id_klubu, nazwa FROM SYSTEM.KLUB')
    WHERE nazwa = @nazwa_gospodarza;

    SELECT @id_goscia = id_klubu
    FROM OPENQUERY(ORACLE_LINK, 
        'SELECT id_klubu, nazwa FROM SYSTEM.KLUB')
    WHERE nazwa = @nazwa_goscia;

    IF @id_gospodarza IS NULL OR @id_goscia IS NULL
    BEGIN
        RAISERROR('Nie znaleziono jednego lub obu klubów w Oracle.', 16, 1);
        RETURN;
    END

    INSERT INTO Mecze (data_meczu, godzina, id_gospodarza, id_goscia, id_stadionu, wynik)
    VALUES (@data_meczu, @godzina, @id_gospodarza, @id_goscia, @id_stadionu, @wynik);
END;

go

CREATE FUNCTION LiczbaMeczyNaStadionie(@id_stadionu INT)
RETURNS INT
AS
BEGIN
    DECLARE @liczba INT;
    SELECT @liczba = COUNT(*) FROM Mecze WHERE id_stadionu = @id_stadionu;
    RETURN @liczba;
END;

CREATE TRIGGER UnikalnaNazwaStadionu
ON Stadiony
INSTEAD OF INSERT
AS
BEGIN
    IF EXISTS (
        SELECT 1 FROM inserted i
        JOIN Stadiony s ON s.nazwa = i.nazwa
    )
    BEGIN
        RAISERROR('Stadion o tej nazwie już istnieje.', 16, 1);
        RETURN;
    END

    INSERT INTO Stadiony (nazwa, miasto, pojemnosc, status)
    SELECT nazwa, miasto, pojemnosc, status FROM inserted;
END;

--testy
EXEC DodajStadion @nazwa = 'Narodowy', @miasto = 'Warszawa', @pojemnosc = 58000;

EXEC DodajMeczPoNazwach 
    @data_meczu = '2025-06-20',
    @godzina = '18:00',
    @nazwa_gospodarza = 'Barcelona',
    @nazwa_goscia = 'Real Madrid',
    @id_stadionu = 1,
    @wynik = '2:1';

select * from mecze
